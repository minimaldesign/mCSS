const colors = [
  "base-0",
  "base-50",
  "base-100",
  "base-200",
  "base-300",
  "base-400",
  "base-500",
  "base-600",
  "base-700",
  "base-800",
  "base-900",
  "base-950",
  "primary-50",
  "primary-100",
  "primary-200",
  "primary-300",
  "primary-400",
  "primary-500",
  "primary-600",
  "primary-700",
  "primary-800",
  "primary-900",
  "primary-950",
  "yes-100",
  "yes-200",
  "yes-300",
  "yes-400",
  "yes-500",
  "no-100",
  "no-200",
  "no-300",
  "no-400",
  "no-500",
  "maybe-100",
  "maybe-200",
  "maybe-300",
  "maybe-400",
  "maybe-500",
];

const properties = [
  { c: "color" },
  { bdc: "border-color" },
  { bgc: "background-color" },
];

const fs = require("fs");

// Function to generate CSS classes
function generateCSSClasses(sizes, properties) {
  let cssOutput = "";

  for (const size of sizes) {
    for (const prop of properties) {
      const [className, cssProperty] = Object.entries(prop)[0];
      cssOutput += `.${className}-${size} {\n`;
      cssOutput += `  ${cssProperty}: var(--${size}) !important;\n`;
      cssOutput += `}\n\n`;
    }
  }

  return cssOutput.trim();
}

// Generate CSS classes
const cssClasses = generateCSSClasses(colors, properties);

// Add comments to the top of the CSS output
const commentedCssOutput = `/* HELPER COLORS */
/* Generated by /scripts/tools.help.color.cjs */

${cssClasses}`;

// Write the result to a text file
fs.writeFile("../styles/help.colors.css", commentedCssOutput, (err) => {
  if (err) {
    console.error("Error writing to file:", err);
  } else {
    console.log("CSS classes have been written to help.spacing.css");
  }
});

// Also log to console for immediate feedback
console.log("Generated CSS Classes:");
console.log(commentedCssOutput);
